import React, { useState } from "react";
import { useParams } from "react-router-dom";

const CreateChapter = () => {
    const { slug } = useParams(); // L·∫•y slug t·ª´ URL (n·∫øu d√πng React Router)
    const [number, setNumber] = useState("");
    const [images, setImages] = useState([]);

    // X·ª≠ l√Ω thay ƒë·ªïi input s·ªë
    const handleNumberChange = (e) => {
        setNumber(e.target.value);
    };

    // X·ª≠ l√Ω thay ƒë·ªïi input file (ch·ªçn nhi·ªÅu ·∫£nh)
    const handleFileChange = (e) => {
        const files = Array.from(e.target.files); // Chuy·ªÉn FileList th√†nh m·∫£ng
        setImages((prevImages) => [...prevImages, ...files]); // C·ªông d·ªìn ·∫£nh ƒë√£ ch·ªçn
    };

    // X·ª≠ l√Ω khi submit form
    const handleSubmit = async (e) => {
        e.preventDefault();
        const API_URL = process.env.REACT_APP_API_URL;


        if (!number || images.length === 0) {
            alert("Vui l√≤ng nh·∫≠p s·ªë v√† ch·ªçn √≠t nh·∫•t m·ªôt ·∫£nh.");
            return;
        }

        // T·∫°o FormData ƒë·ªÉ g·ª≠i d·ªØ li·ªáu l√™n server
        const formData = new FormData();
        formData.append("number", number);
        console.log(images)
        images.forEach((image, index) => {
            formData.append("images", image);
        });

        console.log("üì§ D·ªØ li·ªáu g·ª≠i ƒëi:", formData);

        // G·ª≠i l√™n API (d√πng async/await ƒë·ªÉ d·ªÖ debug)
        try {
            const response = await fetch(`${API_URL}/chapters/create/${slug}`, {
                method: "POST",
                body: formData, // G·ª≠i d·ªØ li·ªáu ·∫£nh
            });
        
            // Ki·ªÉm tra ph·∫£n h·ªìi th·ª±c t·∫ø t·ª´ server
            const text = await response.text();
            console.log("üìå Response t·ª´ server:", text);
        
            // N·∫øu ph·∫£n h·ªìi kh√¥ng ph·∫£i JSON, in ra l·ªói
            try {
                const data = JSON.parse(text);
                if (response.ok) {
                    console.log("‚úÖ K·∫øt qu·∫£ t·ª´ server:", data);
                    alert("Upload th√†nh c√¥ng!");
                    setImages([]); // X√≥a danh s√°ch ·∫£nh sau khi upload
                    setNumber(""); // X√≥a s·ªë ch∆∞∆°ng
                } else {
                    alert("‚ùå L·ªói khi upload: " + data.message);
                }
            } catch (jsonError) {
                console.error("‚ùå L·ªói khi parse JSON, c√≥ th·ªÉ server tr·∫£ v·ªÅ HTML:", text);
            }
        } catch (error) {
            console.error("‚ùå L·ªói khi g·ª≠i d·ªØ li·ªáu:", error);
        }
    };

    return (
        <div className="container mt-5">
            <h2 className="mb-4">T·∫£i l√™n ch∆∞∆°ng m·ªõi</h2>
            <form onSubmit={handleSubmit} className="p-4 border rounded bg-light">
                {/* Input nh·∫≠p s·ªë */}
                <div className="mb-3">
                    <label className="form-label">S·ªë ch∆∞∆°ng:</label>
                    <input
                        type="number"
                        className="form-control"
                        value={number}
                        onChange={handleNumberChange}
                        required
                    />
                </div>

                {/* Input ch·ªçn file ·∫£nh */}
                <div className="mb-3">
                    <label className="form-label">Ch·ªçn ·∫£nh:</label>
                    <input
                        type="file"
                        className="form-control"
                        multiple
                        accept="image/*"
                        onChange={handleFileChange}
                        required
                    />
                </div>

                {/* Hi·ªÉn th·ªã danh s√°ch ·∫£nh ƒë√£ ch·ªçn */}
                {images.length > 0 && (
                    <div className="mb-3">
                        <h5>·∫¢nh ƒë√£ ch·ªçn:</h5>
                        <div className="d-flex flex-wrap">
                            {images.map((image, index) => (
                                <div key={index} className="p-2">
                                    <img
                                        src={URL.createObjectURL(image)}
                                        alt={`·∫¢nh ${index + 1}`}
                                        className="img-thumbnail"
                                        style={{ width: "100px", height: "100px", objectFit: "cover" }}
                                    />
                                </div>
                            ))}
                        </div>
                    </div>
                )}

                {/* N√∫t Submit */}
                <button type="submit" className="btn btn-primary w-100">
                    T·∫£i l√™n
                </button>
            </form>
        </div>
    );
};

export default CreateChapter;
