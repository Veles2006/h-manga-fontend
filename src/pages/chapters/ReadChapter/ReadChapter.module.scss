// Định nghĩa breakpoints (Có thể thay đổi nếu cần)
$breakpoint-mobile: 768px;
$breakpoint-tablet: 1024px;

// Mixin để tạo media queries nhanh chóng
@mixin responsive($breakpoint) {
    @if $breakpoint == mobile {
        @media (max-width: #{$breakpoint-mobile}) {
            @content;
        }
    } @else if $breakpoint == tablet {
        @media (min-width: #{$breakpoint-mobile}) and (max-width: #{$breakpoint-tablet}) {
            @content;
        }
    } @else if $breakpoint == desktop {
        @media (min-width: #{$breakpoint-tablet}) {
            @content;
        }
    }
}

.btn {
    font-size: 1.4rem;
    padding: 6px 12px;
    color: var(--black-color);
    background-color: #e3e3e3;
    border-radius: 6px;
    border: 1px solid var(--border-color);
    transition: color 0.3s ease;
    text-decoration: none;

    &.btn--green-color,
    &.btn--blue-color,
    &.btn--orange-color,
    &.btn--sm-blue-color,
    &.d-none {
        color: var(--white-color);
    }

    & + & {
        margin-left: 8px;
    }

    &:hover {
        color: var(--primary-color);
    }

    &.btn--green-color {
        background-color: #5cb85c;
        border-color: #4cae4c;
    }
    
    &.btn--blue-color {
        background-color: #428bca;
        border-color: #357ebd;
    }
    
    &.btn--orange-color {
        background-color: #f0ad4e;
        border-color: #eea236;
    }
    
    &.btn--sm-blue-color {
        background-color: #5bc0de;
        border: 1px solid transparent;
    }
    
    &.d-none {
        background-color: #dddddd;
        border: 1px solid transparent;
        cursor: not-allowed;
    }
}



.story-container.bg-black {
    background: #333;
}

.story-container {
    width: 100vw;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background: var(--white-color);
}

.story-container .box {
    margin-top: 20px;
    margin-bottom: 20px;
    padding: 20px;
    background: var(--white-color);
    border-radius: 6px;

    svg {
        margin-right: 4px;
    }
}

.alert {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    padding: 15px;
    border: 1px solid transparent;
    border-radius: 4px;
    color: #31708f;
    background-color: #d9edf7;

    em {
        font-size: 1.4rem;
    }

    svg {
        font-size: 1.2rem;
    }
}

.bread-crumb {
    & a,
    span,
    p {
        font-weight: 400;
    }
}

.comic-title {
    display: flex;
    align-items: end;
    margin-bottom: 20px;

    h2,
    time {
        margin: 0;
    }

    h2 {
        font-size: 1.8rem;
        font-weight: 600;
        text-align: center;
    }

    time {
        margin-left: 8px;
        font-size: 1.4rem;
        font-weight: 400;
        color: var(--sm-black-color);

        @include responsive(mobile) {
            margin-top: 10px;
        }
    }

    @include responsive(mobile) {
        justify-content: center;
        align-items: center;
        flex-direction: column;
        margin-bottom: 10px;
    }
}

.story-control {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    a {
        text-decoration: none;
    }
}

.note-server {
    font-size: 1.6rem;
    color: var(--sm-black-color);
    text-align: center;
}

.redirect-btn {
    & .btn svg:first-of-type {
        margin-right: 0;
    }

    & .btn svg:last-of-type {
        margin-left: 4px;
    }
}

.list-img {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
}

.item-img {
    display: flex;
    justify-content: center;
    align-items: center;
    width: auto;
    min-width: 50vw; // Đảm bảo ảnh không quá nhỏ
    max-width: 100vw; // Để ảnh không tràn màn hình ngang
    overflow: hidden;

    img {
        width: 100%;
        height: auto;
        object-fit: contain; // Giữ đúng tỷ lệ khi zoom
        transition: transform 0.3s ease-in-out; // Tạo hiệu ứng mượt khi zoom
    }
}
